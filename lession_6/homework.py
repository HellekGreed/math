import numpy as np
import scipy.stats as stats

print('Известно, что генеральная совокупность распределена нормально со средним квадратическим отклонением, равным 16.')
print('Найти доверительный интервал для оценки математического ожидания a с надежностью 0.95, если выборочная средняя M = 80, а объем выборки n = 256.')
print()
norm = stats.norm.ppf(1 - 0.05 / 2)
a1 = round(80 - norm * 16 / 256**0.5, 2)
a2 = round(80 + norm * 16 / 256**0.5, 2)
print(f'Доверительный интервал: ({a1}, {a2})')
print()

print('В результате 10 независимых измерений некоторой величины X, выполненных с одинаковой точностью, получены опытные данные:')
print('6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1')
print('Предполагая, что результаты измерений подчинены нормальному закону распределения вероятностей,') 
print('оценить истинное значение величины X при помощи доверительного интервала, покрывающего это значение с доверительной вероятностью 0,95.')
print()

x = np.array([6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1])
t = stats.t.ppf(1 - 0.05 / 2, df=9)

a1 = round(x.mean() - t * x.std(ddof=1) / 10 ** 0.5, 2)
a2 = round(x.mean() + t * x.std(ddof=1) / 10 ** 0.5, 2)
print(f'Доверительный интервал: ({a1}, {a2})')
print()

print('Рост дочерей 175, 167, 154, 174, 178, 148, 160, 167, 169, 170')
print('Рост матерей  178, 165, 165, 173, 168, 155, 160, 164, 178, 175')
print('Используя эти данные построить 95% доверительный интервал для разности среднего роста родителей и детей.')
print()
mother = np.array([175, 167, 154, 174, 178, 148, 160, 167, 169, 170])
daughter = np.array([178, 165, 165, 173, 168, 155, 160, 164, 178, 175])
delta = daughter.mean() - mother.mean()
d = (mother.var(ddof=1) + daughter.var(ddof=1)) / 2
s = (d / mother.size + d / daughter.size)**0.5
t = stats.t.ppf(1 - 0.05 / 2, (mother.size - 1) * 2)
a1 = round(delta - t * s, 2)
a2 = round(delta + t * s, 2)
print(f'Доверительный интервал: ({a1}, {a2})')
print()
